// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// find_seasons
std::vector<size_t> find_seasons(std::vector<double>& x);
RcppExport SEXP _blaze_find_seasons(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(find_seasons(x));
    return rcpp_result_gen;
END_RCPP
}
// find_period
size_t find_period(std::vector<double>& x);
RcppExport SEXP _blaze_find_period(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<double>& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(find_period(x));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_blaze_arima();
RcppExport SEXP _rcpp_module_boot_blaze_ar();
RcppExport SEXP _rcpp_module_boot_blaze_auto_ar();
RcppExport SEXP _rcpp_module_boot_blaze_inoise();

static const R_CallMethodDef CallEntries[] = {
    {"_blaze_find_seasons", (DL_FUNC) &_blaze_find_seasons, 1},
    {"_blaze_find_period", (DL_FUNC) &_blaze_find_period, 1},
    {"_rcpp_module_boot_blaze_arima", (DL_FUNC) &_rcpp_module_boot_blaze_arima, 0},
    {"_rcpp_module_boot_blaze_ar", (DL_FUNC) &_rcpp_module_boot_blaze_ar, 0},
    {"_rcpp_module_boot_blaze_auto_ar", (DL_FUNC) &_rcpp_module_boot_blaze_auto_ar, 0},
    {"_rcpp_module_boot_blaze_inoise", (DL_FUNC) &_rcpp_module_boot_blaze_inoise, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_blaze(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
